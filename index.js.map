{"version":3,"file":"index.js","mappings":"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","sources":["webpack://xterm-pty/webpack/universalModuleDefinition","webpack://xterm-pty/./src/eventEmitter.ts","webpack://xterm-pty/./src/lineDiscipline.ts","webpack://xterm-pty/./src/pty.ts","webpack://xterm-pty/./src/termios.ts","webpack://xterm-pty/./src/utils.ts","webpack://xterm-pty/webpack/bootstrap","webpack://xterm-pty/./src/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, () => {\nreturn ","type Listener<T> = (arg: T) => void;\nexport type Event<T> = (listener: Listener<T>) => { dispose: () => void };\n\nexport class EventEmitter<T> {\n  private listeners = new Set<Listener<T>>();\n\n  private _register(listener: Listener<T>) {\n    this.listeners.add(listener);\n    return {\n      dispose: () => {\n        this.listeners.delete(listener);\n      }\n    };\n  }\n\n  register = this._register.bind(this);\n\n  public fire(arg: T): void {\n    for (const listener of this.listeners) {\n      try {\n        listener(arg);\n      } catch (e) {\n        console.error(e);\n      }\n    }\n  }\n}\n","// This module provides LineDiscipline class.\n//\n// It glues the low-level device (e.g., xterm.js) with the high-level process\n// (e.g., JavaScript code and an Emscripten'ed process).\n//\n// It receives an input event from the lower layer (writeFromLower()).\n// Depending on the \"termios\" configuration, it handles some special characters\n// such as Ctrl+C, applies some translations to the input, echos it back to the\n// lower layers, etc. Finally it conveys the input to the upper layer\n// (onWriteToUpper() or onSignalToUpper()).\n//\n// It also receives an output event form the upper layer (writeFromUpper()).\n// Again, it applies some translation (such as replacing NL with CR+NL)\n// depending on termios. And finally it conveys the output to the lower layer\n// (onWriteToLower()).\n//\n//                +-------+\n//                | Upper | (e.g., an Emscripten'ed process)\n//                +-------+\n//                  |   ^\n// writeFromUpper() |   | onWriteToUpper() (and onSignalToUpper())\n//                  V   |\n//           +-----------------+\n//           | Line discipline |\n//           +-----------------+\n//                  |   ^\n// onWriteToLower() |   | writeFromLower()\n//                  V   |\n//                +-------+\n//                | Lower | (e.g., xterm.js)\n//                +-------+\n//\n// References:\n//\n// https://en.wikipedia.org/wiki/Line_discipline\n// https://man7.org/linux/man-pages/man3/termios.3.html\n// https://pubs.opengroup.org/onlinepubs/009695299/basedefs/xbd_chap11.html\n// https://pubs.opengroup.org/onlinepubs/009695299/utilities/stty.html\n// https://github.com/torvalds/linux/blob/master/drivers/tty/n_tty.c\n\nimport {\n  BS,\n  TAB,\n  NL,\n  CR,\n  SP,\n  isalnum,\n  iscntrl,\n  isUtf8ContinuationByte,\n  tolower,\n  toupper,\n  stringToUtf8Bytes,\n} from \"./utils\";\nimport { Signal } from \"./pty\";\nimport { Termios, defaultTermios } from \"./termios\";\nimport { EventEmitter, Event } from \"./eventEmitter\";\n\ntype KeyAction =\n  | \"normal\"\n  | \"VEOF\"\n  | \"VEOL\"\n  | \"VERASE\"\n  | \"VKILL\"\n  | \"VREPRINT\"\n  | \"VWERASE\"\n  | \"VLNEXT\"\n  | \"VSTART\"\n  | \"VSTOP\"\n  | \"VINTR\"\n  | \"VQUIT\"\n  | \"VSUSP\";\n\nexport class LineDiscipline {\n  // callbacks\n  private _onWriteToLower = new EventEmitter<number[]>();\n  readonly onWriteToLower = this._onWriteToLower.register;\n\n  private _onWriteToUpper = new EventEmitter<number[]>();\n  readonly onWriteToUpper = this._onWriteToUpper.register;\n\n  private _onSignalToUpper = new EventEmitter<Signal>();\n  readonly onSignalToUpper = this._onSignalToUpper.register;\n\n  private _onFlowActivated = new EventEmitter<void>();\n  readonly onFlowActivated = this._onFlowActivated.register;\n\n  private _onFlowDeactivated = new EventEmitter<void>();\n  readonly onFlowDeactivated = this._onFlowDeactivated.register;\n\n  // states\n  private T = defaultTermios;\n  private keyActions: KeyAction[] = new Array(256).fill(\"normal\");\n\n  private flowActivated = true; // false after VSTOP (C-s), true after VSTART (C-q)\n  private column = 0; // the column that the cursor is in\n  private baseColumn = 0; // the column that starts the to-upper buffer\n  private vlnext = false; // waiting for the next character after VLNEXT (C-v)\n  private echoprt = false; // erasing with ECHOPRT\n\n  private toLowerBuf: number[] = []; // flushed immediately every call\n  private toUpperBuf: number[] = []; // flushed after NL is input (in ICANON mode)\n\n  constructor() {\n    this.termios = defaultTermios;\n  }\n\n  private activateFlow() {\n    this.flowActivated = true;\n    this._onFlowActivated.fire();\n  }\n\n  private deactivateFlow() {\n    this.flowActivated = false;\n    this._onFlowDeactivated.fire();\n  }\n\n  get flow() {\n    return this.flowActivated;\n  }\n\n  get termios() {\n    return this.T;\n  }\n\n  set termios(T: Termios) {\n    this.T = T;\n\n    const keyActions: KeyAction[] = new Array(256).fill(\"normal\");\n\n    if (T.ICANON_P) {\n      keyActions[T.EOF_V] = \"VEOF\";\n      keyActions[T.EOL_V] = \"VEOL\";\n      keyActions[T.EOL2_V] = \"VEOL\";\n      keyActions[T.ERASE_V] = \"VERASE\";\n      keyActions[T.KILL_V] = \"VKILL\";\n      if (T.IEXTEN_P) {\n        keyActions[T.REPRINT_V] = \"VREPRINT\";\n        keyActions[T.WERASE_V] = \"VWERASE\";\n      }\n    }\n    if (T.IEXTEN_P) {\n      keyActions[T.LNEXT_V] = \"VLNEXT\";\n    }\n    if (T.IXON_P) {\n      keyActions[T.START_V] = \"VSTART\";\n      keyActions[T.STOP_V] = \"VSTOP\";\n    }\n    if (T.ISIG_P) {\n      keyActions[T.INTR_V] = \"VINTR\";\n      keyActions[T.QUIT_V] = \"VQUIT\";\n      keyActions[T.SUSP_V] = \"VSUSP\";\n    }\n    keyActions[0] = \"normal\"; // Ignore any action for NUL character\n\n    this.keyActions = keyActions;\n\n    if (!this.T.IXON_P) {\n      this.activateFlow();\n      this.flushToLower();\n    }\n  }\n\n  private clearToLower() {\n    this.toLowerBuf.length = 0;\n  }\n\n  private flushToLower() {\n    if (this.flowActivated == false) return;\n    this._onWriteToLower.fire(this.toLowerBuf);\n    this.clearToLower();\n  }\n\n  private outputToLower(buf: number[]) {\n    this.toLowerBuf.push(...buf);\n  }\n\n  private updateBaseColumn() {\n    if (this.toUpperBuf.length == 0) {\n      this.baseColumn = this.column;\n    }\n  }\n\n  private clearToUpper() {\n    this.toUpperBuf.length = 0;\n    this.updateBaseColumn();\n  }\n\n  private flushToUpper() {\n    this._onWriteToUpper.fire(this.toUpperBuf);\n    this.clearToUpper();\n  }\n\n  private outputToUpper(c: number) {\n    this.toUpperBuf.push(c);\n  }\n\n  private outputToLowerWithPostprocess(c: number) {\n    if (this.T.OPOST_P) {\n      switch (c) {\n        case BS:\n          if (this.column > 0) this.column--;\n          this.outputToLower([BS]);\n          break;\n        case TAB: {\n          const spaces = 8 - (this.column % 8);\n          this.column += spaces;\n          this.outputToLower(\n            this.T.TABDLY_XTABS_P ? new Array(spaces).fill(SP) : [TAB]\n          );\n          break;\n        }\n        case NL:\n          if (this.T.ONLCR_P) {\n            this.baseColumn = this.column = 0;\n            this.outputToLower([CR, NL]);\n          } else if (this.T.ONLRET_P) {\n            this.column = 0;\n            this.outputToLower([NL]);\n          } else {\n            this.baseColumn = this.column;\n            this.outputToLower([NL]);\n          }\n          break;\n        case CR:\n          if (this.T.ONOCR_P && this.column == 0) {\n            // nothing printed\n          } else if (this.T.OCRNL_P) {\n            if (this.T.ONLRET_P) this.baseColumn = this.column = 0;\n            this.outputToLower([NL]);\n          } else {\n            this.baseColumn = this.column = 0;\n            this.outputToLower([CR]);\n          }\n          break;\n        default:\n          if (!(this.T.IUTF8_P && isUtf8ContinuationByte(c))) this.column++;\n          this.outputToLower(this.T.OLCUC_P ? [toupper(c)] : [c]);\n          break;\n      }\n    } else {\n      this.outputToLower([c]);\n    }\n  }\n\n  private echoToLower(chars: number | number[], raw?: boolean) {\n    if (typeof chars == \"number\") chars = [chars];\n\n    for (const c of chars) {\n      if (this.T.ECHOCTL_P && iscntrl(c) && c != TAB && !raw) {\n        this.outputToLower([94 /* '^' */, c ^ 0x40]);\n        this.column += 2;\n      } else {\n        this.outputToLowerWithPostprocess(c);\n      }\n    }\n  }\n\n  private inputFromLowerWithPreprocess(c: number) {\n    if (c == CR) {\n      if (this.T.IGNCR_P) return;\n      if (this.T.ICRNL_P) c = NL;\n    } else if (c == NL && this.T.INLCR_P) {\n      c = CR;\n    }\n\n    if (this.T.ICANON_P && c == NL) {\n      // flush the to-upper buffer\n      if (this.T.ECHO_P || this.T.ECHONL_P) {\n        this.echoToLower(NL, true);\n        this.flushToLower();\n      }\n      this.outputToUpper(NL);\n      this.flushToUpper();\n    } else if (this.T.ECHO_P) {\n      this.finishECHOPRT();\n      this.updateBaseColumn();\n      if (c == NL) {\n        this.echoToLower(NL, true);\n      } else {\n        this.echoToLower(c);\n      }\n      this.flushToLower();\n      this.outputToUpper(c);\n    } else {\n      this.outputToUpper(c);\n    }\n    // writeFromLower will flush the to-upper buffer later\n  }\n\n  private erase(type: \"VERASE\" | \"VWERASE\" | \"VKILL\") {\n    if (this.toUpperBuf.length == 0) return;\n\n    if (type == \"VKILL\") {\n      if (!this.T.ECHO_P) {\n        this.clearToUpper();\n        return;\n      }\n      if (!this.T.ECHOK_P || !this.T.ECHOKE_P || !this.T.ECHOE_P) {\n        this.clearToUpper();\n        this.finishECHOPRT();\n        this.echoToLower(this.T.KILL_V);\n        if (this.T.ECHOK_P) this.echoToLower(NL, true);\n        return;\n      }\n    }\n\n    let alnumsFound = false;\n    for (let idx = this.toUpperBuf.length - 1; idx >= 0; idx--) {\n      const c = this.toUpperBuf[idx];\n      if (this.T.IUTF8_P && isUtf8ContinuationByte(c)) continue;\n\n      if (type == \"VWERASE\") {\n        if (isalnum(c) || c == 0x5f /* '_' */) {\n          alnumsFound = true;\n        } else if (alnumsFound) break;\n      }\n\n      const removedChar = this.toUpperBuf.splice(idx);\n      if (this.T.ECHO_P) {\n        if (this.T.ECHOPRT_P) {\n          this.startECHOPRT();\n          this.echoToLower(removedChar);\n        } else if (type == \"VERASE\" && !this.T.ECHOE_P) {\n          this.echoToLower(this.T.ERASE_V);\n        } else if (c == TAB) {\n          let count = 0;\n          let tabFound = false;\n\n          for (let idx = this.toUpperBuf.length - 1; idx >= 0; idx--) {\n            const c = this.toUpperBuf[idx];\n            if (c == TAB) {\n              tabFound = true;\n              break;\n            } else if (iscntrl(c)) {\n              if (this.T.ECHOCTL_P) count += 2;\n            } else if (this.T.IUTF8_P && isUtf8ContinuationByte(c)) {\n              // ignore\n            } else {\n              count++;\n            }\n          }\n          if (!tabFound) count += this.baseColumn;\n\n          count = 8 - (count % 8);\n          this.outputToLower(new Array(count).fill(BS));\n          this.column = Math.max(0, this.column - count);\n        } else {\n          if (iscntrl(c) && this.T.ECHOCTL_P) {\n            this.echoToLower([BS, SP, BS], true);\n          }\n          if (!iscntrl(c) || this.T.ECHOCTL_P) {\n            // delete '^' of ECHOCTL\n            this.echoToLower([BS, SP, BS], true);\n          }\n        }\n      }\n      if (type == \"VERASE\") break;\n    }\n    if (this.toUpperBuf.length == 0) {\n      this.clearToUpper();\n      if (this.T.ECHO_P) this.finishECHOPRT();\n    }\n  }\n\n  private startECHOPRT() {\n    if (!this.echoprt) {\n      this.echoToLower(92 /* '\\' */, true);\n      this.echoprt = true;\n    }\n  }\n\n  private finishECHOPRT() {\n    if (this.echoprt) {\n      this.echoToLower(47 /* '/' */, true);\n      this.echoprt = false;\n    }\n  }\n\n  private signal(sig: Signal, c: number) {\n    this._onSignalToUpper.fire(sig);\n    if (!this.T.NOFLSH_P) {\n      this.clearToLower();\n      this.clearToUpper();\n    }\n    if (this.T.IXON_P) this.activateFlow();\n    if (this.T.ECHO_P) this.echoToLower(c);\n    this.flushToLower();\n  }\n\n  private checkStartFlow() {\n    if (this.flowActivated == false && this.T.IXON_P && this.T.IXANY_P) {\n      this.activateFlow();\n      this.flushToLower();\n    }\n  }\n\n  private nextLiteral() {\n    this.vlnext = true;\n    if (this.T.ECHO_P) {\n      this.finishECHOPRT();\n      if (this.T.ECHOCTL_P) {\n        this.echoToLower([94 /* '^' */, BS], true);\n        this.flushToLower();\n      }\n    }\n  }\n\n  private reprint() {\n    this.finishECHOPRT();\n    this.echoToLower(this.T.REPRINT_V);\n    this.echoToLower(NL, true);\n    this.echoToLower(this.toUpperBuf);\n  }\n\n  writeFromLower(arg: number[] | string) {\n    const buf = typeof arg == \"string\" ? stringToUtf8Bytes(arg) : arg;\n\n    for (let c of buf) {\n      if (this.T.ISTRIP_P) c &= 0x7f;\n      if (this.T.IUCLC_P && this.T.IEXTEN_P) c = tolower(c);\n\n      const keyAction = this.vlnext ? \"normal\" : this.keyActions[c];\n      this.vlnext = false;\n\n      switch (keyAction) {\n        case \"normal\":\n          this.checkStartFlow();\n          this.inputFromLowerWithPreprocess(c);\n          break;\n        case \"VERASE\":\n        case \"VWERASE\":\n        case \"VKILL\":\n          this.checkStartFlow();\n          this.erase(keyAction);\n          this.flushToLower();\n          break;\n        case \"VEOF\":\n          this.checkStartFlow();\n          this.flushToUpper();\n          break;\n        case \"VEOL\":\n          this.checkStartFlow();\n          if (this.T.ECHO_P) {\n            this.echoToLower(c);\n            this.flushToLower();\n          }\n          this.outputToUpper(c);\n          this.flushToUpper();\n          break;\n        case \"VLNEXT\":\n          this.checkStartFlow();\n          this.nextLiteral();\n          break;\n        case \"VREPRINT\":\n          this.checkStartFlow();\n          this.reprint();\n          this.flushToLower();\n          break;\n        case \"VSTART\":\n          this.activateFlow();\n          this.flushToLower();\n          break;\n        case \"VSTOP\":\n          this.deactivateFlow();\n          break;\n        case \"VINTR\":\n          this.signal(\"SIGINT\", c);\n          break;\n        case \"VQUIT\":\n          this.signal(\"SIGQUIT\", c);\n          break;\n        case \"VSUSP\":\n          this.signal(\"SIGTSTP\", c);\n          break;\n      }\n    }\n\n    if (!this.T.ICANON_P) {\n      this.flushToUpper();\n    }\n  }\n\n  writeFromUpper(arg: number[] | string) {\n    if (this.flowActivated == false) {\n      throw \"Do not write anything during flowStatus is stopped\";\n    }\n\n    const buf = typeof arg == \"string\" ? stringToUtf8Bytes(arg) : arg;\n\n    for (const c of buf) this.outputToLowerWithPostprocess(c);\n    this.flushToLower();\n  }\n}\n\nexport interface LineDiscipline {\n  readonly onWriteToLower: Event<number[]>;\n  readonly onWriteToUpper: Event<number[]>;\n  readonly onSignalToUpper: Event<Signal>;\n  readonly onFlowActivated: Event<void>;\n  readonly onFlowDeactivated: Event<void>;\n  flow: boolean;\n  termios: Termios;\n  writeFromLower: (arg: number[] | string) => void;\n  writeFromUpper: (arg: number[] | string) => void;\n}\n","// This module provides the \"openpty\" function.\n// It returns a master object, which is an addon for xterm.js, and a slave\n// object, which serves as stdin/stdout for a process.\n//\n// Typical usage:\n//\n//   // Start an xterm.js instance\n//   const xterm = new Terminal();\n//\n//   // Create master/slave objects\n//   const { master, slave } = openpty();\n//\n//   // Connect the master object to xterm.js\n//   xterm.loadAddon(ldiscAddon);\n//\n//   // Use slave.write instead of xterm.write\n//   slave.write(\"Hello, world!\\nInput your name:\");\n//\n//   // Use slave.onReadable and slave.read instead of xterm.onData\n//   slave.onReadable(() => {\n//     xterm.write(`Hi, ${ slave.read().trim() }!\\n`);\n//   });\n\nimport { Terminal, ITerminalAddon, IDisposable } from \"@xterm/xterm\";\nimport { EventEmitter } from \"./eventEmitter\";\nimport { LineDiscipline } from \"./lineDiscipline\";\nimport { Termios, TermiosConfig } from \"./termios\";\nimport { stringToUtf8Bytes } from \"./utils\";\n\nexport type Signal = \"SIGINT\" | \"SIGQUIT\" | \"SIGTSTP\" | \"SIGWINCH\";\n\nconst bufferLimit = 4096;\n\nclass Master implements ITerminalAddon {\n  private disposables: IDisposable[] = [];\n\n  private _onWrite = new EventEmitter<[Uint8Array, () => void]>();\n  readonly onWrite = this._onWrite.register;\n\n  private fromLdiscToLowerBuffer: number[] = [];\n  private waitingForLower = false; // xterm.js implements buffering\n\n  private notifyWritable;\n  private notifyResize;\n\n  constructor(private ldisc: LineDiscipline, private slave: Slave) {\n    const flushToLower = () => {\n      if (this.fromLdiscToLowerBuffer.length >= 1) {\n        this.waitingForLower = true;\n\n        const buf = new Uint8Array(this.fromLdiscToLowerBuffer.splice(0, 4096));\n\n        if (this.fromLdiscToLowerBuffer.length <= bufferLimit)\n          this.notifyWritable();\n\n        this._onWrite.fire([buf, flushToLower]);\n      } else {\n        this.waitingForLower = false;\n      }\n    };\n\n    this.ldisc.onWriteToLower((buf) => {\n      this.fromLdiscToLowerBuffer.push(...buf);\n      if (!this.waitingForLower) flushToLower();\n    });\n\n    const { notifyWritable, notifyResize } = slave.initFromMaster();\n    this.notifyWritable = notifyWritable;\n    this.notifyResize = notifyResize;\n  }\n\n  activate(xterm: Terminal) {\n    this.onWrite(([buf, callback]) => xterm.write(buf, callback));\n\n    const onData = (str: string) => this.ldisc.writeFromLower(str);\n\n    this.disposables.push(\n      xterm.onData(onData),\n      xterm.onBinary(onData),\n      xterm.onResize(({ cols, rows }) => this.notifyResize(rows, cols))\n    );\n  }\n\n  dispose(): void {\n    this.disposables.forEach((d) => d.dispose());\n    this.disposables.length = 0;\n  }\n}\n\nexport class Slave {\n  private _onReadable = new EventEmitter<void>();\n  readonly onReadable = this._onReadable.register;\n\n  private _onWritable = new EventEmitter<void>();\n  readonly onWritable = this._onWritable.register;\n\n  private _onSignal = new EventEmitter<Signal>();\n  readonly onSignal = this._onSignal.register;\n\n  private fromLdiscToUpperBuffer: number[] = [];\n  private fromUpperToLdiscBuffer: number[] = [];\n\n  private winsize: [number, number] = [80, 24];\n\n  constructor(private ldisc: LineDiscipline) {\n    this.ldisc.onWriteToUpper((buf) => {\n      this.fromLdiscToUpperBuffer.push(...buf);\n      this._onReadable.fire();\n    });\n\n    this.ldisc.onFlowActivated(() => {\n      if (this.fromUpperToLdiscBuffer.length >= 1) {\n        this.ldisc.writeFromUpper(this.fromUpperToLdiscBuffer);\n        this.fromUpperToLdiscBuffer.length = 0;\n      }\n    });\n\n    this.ldisc.onSignalToUpper((sig) => {\n      this._onSignal.fire(sig);\n    });\n  }\n\n  initFromMaster() {\n    return {\n      notifyWritable: () => this._onWritable.fire(),\n      notifyResize: (rows: number, cols: number) => {\n        this.winsize = [cols, rows];\n        this._onSignal.fire(\"SIGWINCH\");\n      },\n    };\n  }\n\n  get readable() {\n    return this.fromLdiscToUpperBuffer.length >= 1;\n  }\n\n  read(length?: number) {\n    const len =\n      typeof length !== \"undefined\"\n        ? Math.min(this.fromLdiscToUpperBuffer.length, length)\n        : this.fromLdiscToUpperBuffer.length;\n    return this.fromLdiscToUpperBuffer.splice(0, len);\n  }\n\n  get writable() {\n    return this.fromUpperToLdiscBuffer.length <= bufferLimit;\n  }\n\n  write(arg: string | number[]) {\n    const buf = typeof arg == \"string\" ? stringToUtf8Bytes(arg) : arg;\n    this.fromUpperToLdiscBuffer = this.fromUpperToLdiscBuffer.concat(buf);\n\n    if (this.ldisc.flow) {\n      this.ldisc.writeFromUpper(this.fromUpperToLdiscBuffer);\n      this.fromUpperToLdiscBuffer.length = 0;\n    }\n  }\n\n  ioctl(req: \"TCGETS\"): Termios;\n  ioctl(req: \"TCSETS\", arg: TermiosConfig): void;\n  ioctl(req: \"TIOCGWINSZ\"): [number, number];\n  ioctl(req: \"TCGETS\" | \"TCSETS\" | \"TIOCGWINSZ\", arg?: any) {\n    switch (req) {\n      case \"TCGETS\":\n        return this.ldisc.termios.clone();\n      case \"TCSETS\":\n        this.ldisc.termios = Termios.fromConfig(arg);\n        return;\n      case \"TIOCGWINSZ\":\n        return this.winsize.slice();\n    }\n  }\n}\n\nexport const openpty = () => {\n  const ldisc = new LineDiscipline();\n  const slave = new Slave(ldisc);\n  const master = new Master(ldisc, slave);\n  return { master, slave };\n};\n","// This module provides a Termios class for termios struct data.\n//\n// https://man7.org/linux/man-pages/man3/termios.3.html\n\nconst enum Flags {\n  // c_iflag\n  ISTRIP = 0x0020,\n  INLCR = 0x0040,\n  IGNCR = 0x0080,\n  ICRNL = 0x0100,\n  IUCLC = 0x0200,\n  IXON = 0x0400,\n  IXANY = 0x0800,\n  IMAXBEL = 0x2000,\n  IUTF8 = 0x4000,\n\n  // c_oflag\n  OPOST = 0x0001,\n  OLCUC = 0x0002,\n  ONLCR = 0x0004,\n  OCRNL = 0x0008,\n  ONOCR = 0x0010,\n  ONLRET = 0x0020,\n  TABDLY = 0x1800,\n  XTABS = 0x1800,\n\n  // c_lflag\n  ISIG = 0x0001,\n  ICANON = 0x0002,\n  ECHO = 0x0008,\n  ECHOE = 0x0010,\n  ECHOK = 0x0020,\n  ECHONL = 0x0040,\n  NOFLSH = 0x0080,\n  ECHOCTL = 0x0200,\n  ECHOPRT = 0x0400,\n  ECHOKE = 0x0800,\n  IEXTEN = 0x8000,\n\n  // c_cc\n  VINTR = 0,\n  VQUIT = 1,\n  VERASE = 2,\n  VKILL = 3,\n  VEOF = 4,\n  VTIME = 5,\n  VMIN = 6,\n  VSWTCH = 7,\n  VSTART = 8,\n  VSTOP = 9,\n  VSUSP = 10,\n  VEOL = 11,\n  VREPRINT = 12,\n  VDISCARD = 13,\n  VWERASE = 14,\n  VLNEXT = 15,\n  VEOL2 = 16\n}\n\nexport interface TermiosConfig {\n  readonly iflag: number;\n  readonly oflag: number;\n  readonly cflag: number;\n  readonly lflag: number;\n  readonly cc: ReadonlyArray<number>;\n}\n\nexport class Termios implements TermiosConfig {\n  constructor(\n    readonly iflag: number,\n    readonly oflag: number,\n    readonly cflag: number,\n    readonly lflag: number,\n    readonly cc: ReadonlyArray<number>\n  ) {}\n\n  readonly ISTRIP_P = (this.iflag & Flags.ISTRIP) != 0;\n  readonly INLCR_P = (this.iflag & Flags.INLCR) != 0;\n  readonly IGNCR_P = (this.iflag & Flags.IGNCR) != 0;\n  readonly ICRNL_P = (this.iflag & Flags.ICRNL) != 0;\n  readonly IUCLC_P = (this.iflag & Flags.IUCLC) != 0;\n  readonly IXON_P = (this.iflag & Flags.IXON) != 0;\n  readonly IXANY_P = (this.iflag & Flags.IXANY) != 0;\n  readonly IUTF8_P = (this.iflag & Flags.IUTF8) != 0;\n  readonly OPOST_P = (this.oflag & Flags.OPOST) != 0;\n  readonly OLCUC_P = (this.oflag & Flags.OLCUC) != 0;\n  readonly ONLCR_P = (this.oflag & Flags.ONLCR) != 0;\n  readonly OCRNL_P = (this.oflag & Flags.OCRNL) != 0;\n  readonly ONOCR_P = (this.oflag & Flags.ONOCR) != 0;\n  readonly ONLRET_P = (this.oflag & Flags.ONLRET) != 0;\n  readonly TABDLY_XTABS_P = (this.oflag & Flags.TABDLY) == Flags.XTABS;\n  readonly ISIG_P = (this.lflag & Flags.ISIG) != 0;\n  readonly ICANON_P = (this.lflag & Flags.ICANON) != 0;\n  readonly ECHO_P = (this.lflag & Flags.ECHO) != 0;\n  readonly ECHOE_P = (this.lflag & Flags.ECHOE) != 0;\n  readonly ECHOK_P = (this.lflag & Flags.ECHOK) != 0;\n  readonly ECHONL_P = (this.lflag & Flags.ECHONL) != 0;\n  readonly NOFLSH_P = (this.lflag & Flags.NOFLSH) != 0;\n  readonly ECHOCTL_P = (this.lflag & Flags.ECHOCTL) != 0;\n  readonly ECHOPRT_P = (this.lflag & Flags.ECHOPRT) != 0;\n  readonly ECHOKE_P = (this.lflag & Flags.ECHOKE) != 0;\n  readonly IEXTEN_P = (this.lflag & Flags.IEXTEN) != 0;\n\n  readonly INTR_V = this.cc[Flags.VINTR];\n  readonly QUIT_V = this.cc[Flags.VQUIT];\n  readonly ERASE_V = this.cc[Flags.VERASE];\n  readonly KILL_V = this.cc[Flags.VKILL];\n  readonly EOF_V = this.cc[Flags.VEOF];\n  readonly TIME_V = this.cc[Flags.VTIME]; // not supported\n  readonly MIN_V = this.cc[Flags.VMIN]; // not supported\n  readonly SWTCH_V = this.cc[Flags.VSWTCH]; // not supported\n  readonly START_V = this.cc[Flags.VSTART];\n  readonly STOP_V = this.cc[Flags.VSTOP];\n  readonly SUSP_V = this.cc[Flags.VSUSP];\n  readonly EOL_V = this.cc[Flags.VEOL];\n  readonly REPRINT_V = this.cc[Flags.VREPRINT];\n  readonly DISCARD_V = this.cc[Flags.VDISCARD]; // not supported\n  readonly WERASE_V = this.cc[Flags.VWERASE];\n  readonly LNEXT_V = this.cc[Flags.VLNEXT];\n  readonly EOL2_V = this.cc[Flags.VEOL2];\n\n  static fromConfig(config: TermiosConfig) {\n    return new Termios(\n      config.iflag,\n      config.oflag,\n      config.cflag,\n      config.lflag,\n      config.cc\n    );\n  }\n\n  clone() {\n    return Termios.fromConfig(this);\n  }\n}\n\nexport const defaultTermios = new Termios(\n  Flags.ICRNL | Flags.IXON | Flags.IMAXBEL | Flags.IUTF8,\n  Flags.OPOST | Flags.ONLCR,\n  0x00bf, // c_cflag is not supported\n  Flags.ISIG |\n    Flags.ICANON |\n    Flags.ECHO |\n    Flags.ECHOE |\n    Flags.ECHOK |\n    Flags.ECHOCTL |\n    Flags.ECHOKE |\n    Flags.IEXTEN,\n  [\n    0x03, 0x1c, 0x7f, 0x15, 0x04, 0x00, 0x01, 0x00, 0x11, 0x13, 0x1a, 0x00,\n    0x12, 0x0f, 0x17, 0x16, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00\n  ]\n);\n","export const BS = 8;\nexport const TAB = 9;\nexport const NL = 10;\nexport const CR = 13;\nexport const SP = 32;\n\nexport const isalnum = (c: number) =>\n  (0x30 <= c && c <= 0x39) ||\n  (0x41 <= c && c <= 0x5a) ||\n  c == 0x5f ||\n  (0x61 <= c && c <= 0x7a);\nexport const iscntrl = (c: number) =>\n  (0x00 <= c && c <= 0x1f && c != 0x09) || c == 0x7f;\nexport const isUtf8ContinuationByte = (c: number) => (c & 0xc0) == 0x80;\nexport const tolower = (c: number) => (0x41 <= c && c <= 0x5a ? c + 0x20 : c);\nexport const toupper = (c: number) => (0x61 <= c && c <= 0x7a ? c - 0x20 : c);\n\nconst utf8Encoder = new TextEncoder();\n\nexport const stringToUtf8Bytes = (str: string) =>\n  Array.from(utf8Encoder.encode(str));\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","export { openpty } from \"./pty\";\n"],"names":["root","factory","exports","module","define","amd","a","i","this","listeners","Set","register","_register","bind","listener","add","dispose","delete","fire","arg","e","console","error","constructor","_onWriteToLower","EventEmitter","onWriteToLower","_onWriteToUpper","onWriteToUpper","_onSignalToUpper","onSignalToUpper","_onFlowActivated","onFlowActivated","_onFlowDeactivated","onFlowDeactivated","T","defaultTermios","keyActions","Array","fill","flowActivated","column","baseColumn","vlnext","echoprt","toLowerBuf","toUpperBuf","termios","activateFlow","deactivateFlow","flow","ICANON_P","EOF_V","EOL_V","EOL2_V","ERASE_V","KILL_V","IEXTEN_P","REPRINT_V","WERASE_V","LNEXT_V","IXON_P","START_V","STOP_V","ISIG_P","INTR_V","QUIT_V","SUSP_V","flushToLower","clearToLower","length","outputToLower","buf","push","updateBaseColumn","clearToUpper","flushToUpper","outputToUpper","c","outputToLowerWithPostprocess","OPOST_P","BS","TAB","spaces","TABDLY_XTABS_P","SP","NL","ONLCR_P","CR","ONLRET_P","ONOCR_P","OCRNL_P","IUTF8_P","isUtf8ContinuationByte","OLCUC_P","toupper","echoToLower","chars","raw","ECHOCTL_P","iscntrl","inputFromLowerWithPreprocess","IGNCR_P","ICRNL_P","INLCR_P","ECHO_P","ECHONL_P","finishECHOPRT","erase","type","ECHOK_P","ECHOKE_P","ECHOE_P","alnumsFound","idx","isalnum","removedChar","splice","ECHOPRT_P","startECHOPRT","count","tabFound","Math","max","signal","sig","NOFLSH_P","checkStartFlow","IXANY_P","nextLiteral","reprint","writeFromLower","stringToUtf8Bytes","ISTRIP_P","IUCLC_P","tolower","keyAction","writeFromUpper","Master","ldisc","slave","disposables","_onWrite","onWrite","fromLdiscToLowerBuffer","waitingForLower","Uint8Array","notifyWritable","notifyResize","initFromMaster","activate","xterm","callback","write","onData","str","onBinary","onResize","cols","rows","forEach","d","Slave","_onReadable","onReadable","_onWritable","onWritable","_onSignal","onSignal","fromLdiscToUpperBuffer","fromUpperToLdiscBuffer","winsize","readable","read","len","min","writable","concat","ioctl","req","clone","Termios","fromConfig","slice","openpty","LineDiscipline","master","iflag","oflag","cflag","lflag","cc","TIME_V","MIN_V","SWTCH_V","DISCARD_V","config","utf8Encoder","TextEncoder","from","encode","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__"],"sourceRoot":""}